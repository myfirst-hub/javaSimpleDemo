<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.simpleDemo.mapper.TheoryTrainProgramMapper">

    <resultMap id="TheoryTrainProgramMap" type="com.example.simpleDemo.entity.TheoryTrainProgram">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="semester" column="semester"/>
        <result property="trainDescribe" column="train_describe"/>
        <result property="trainTime" column="train_time"/>
        <result property="subjectId" column="subject_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="selectTheoryTrainProgramList" resultMap="TheoryTrainProgramMap" parameterType="map">
        SELECT 
            id,
            name,
            semester,
            train_describe,
            train_time,
            created_at,
            updated_at,
            subject_id
        FROM theory_train_program
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="semester != null and semester != ''">
                AND semester LIKE CONCAT('%', #{semester}, '%')
            </if>
            <if test="subjectIds != null and subjectIds.length > 0">
                AND subject_id IN
                <foreach item="item" index="index" collection="subjectIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY created_at DESC
    </select>

    <!-- 根据ID查询理论培训计划详情 -->
    <select id="selectTheoryTrainProgramById" resultMap="TheoryTrainProgramMap" parameterType="long">
        SELECT 
            id,
            name,
            semester,
            train_describe,
            train_time,
            subject_id,
            created_at,
            updated_at
        FROM theory_train_program
        WHERE id = #{id}
    </select>

    <!-- 根据ID查询理论培训计划详情 -->
    <select id="selectTheoryTrainProgramBySubjectId" resultMap="TheoryTrainProgramMap" parameterType="long">
        SELECT 
            id,
            name,
            semester,
            train_describe,
            train_time,
            subject_id,
            created_at,
            updated_at
        FROM theory_train_program
        WHERE subject_id = #{subjectId}
    </select>

    <!-- 新增理论培训计划 -->
    <insert id="insertTheoryTrainProgram" parameterType="com.example.simpleDemo.entity.TheoryTrainProgram" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO theory_train_program (
            name,
            semester,
            train_describe,
            train_time,
            subject_id,
            created_at,
            updated_at
        ) VALUES (
            #{name},
            #{semester},
            #{trainDescribe},
            #{trainTime},
            #{subjectId},
            #{createdAt},
            #{updatedAt}
        )
    </insert>

    <!-- 编辑理论培训计划 -->
    <update id="updateTheoryTrainProgram" parameterType="com.example.simpleDemo.entity.TheoryTrainProgram">
        UPDATE theory_train_program
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="semester != null and semester != ''">
                semester = #{semester},
            </if>
            <if test="trainDescribe != null">
                train_describe = #{trainDescribe},
            </if>
            <if test="trainTime != null">
                train_time = #{trainTime},
            </if>
            <if test="subjectId != null">
                subject_id = #{subjectId},
            </if>
            updated_at = #{updatedAt}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除理论培训计划 -->
    <delete id="deleteTheoryTrainProgram" parameterType="long">
        DELETE FROM theory_train_program WHERE id = #{id}
    </delete>

    <!-- 插入测试结果数据 -->
    <insert id="insertDynamicTheoryTestResult" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO theory_test_result (
            test_time,
            test_name,
            attributes,
            total_score,
            full_score,
            created_at,
            updated_at
        ) VALUES (
            #{testTime},
            #{testName},
            #{attributes},
            #{totalScore},
            #{fullScore},
            #{createdAt},
            #{updatedAt}
        )
    </insert>
    
    <!-- 插入测试结果关联数据 -->
    <insert id="insertTheoryTestMap" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO theory_test_map (
            theory_test_id,
            student_id,
            subject_id,
            train_program_id,
            created_at,
            updated_at
        ) VALUES (
            #{theoryTestId},
            #{studentId},
            #{subjectId},
            #{trainProgramId},
            #{createdAt},
            #{updatedAt}
        )
    </insert>

    <!-- 更新测试结果数据 -->
    <update id="updateDynamicTheoryTestResult" parameterType="map">
        UPDATE theory_test_result
        SET 
            test_time = #{testTime},
            test_name = #{testName},
            attributes = #{attributes},
            total_score = #{totalScore},
            full_score = #{fullScore},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 新增基于关联表的查询 -->
    <resultMap id="TheoryTestResultMap" type="com.example.simpleDemo.entity.TheoryTestResult">
        <id property="id" column="id"/>
        <result property="testTime" column="test_time"/>
        <result property="testName" column="test_name"/>
        <result property="attributes" column="attributes"/>
        <result property="totalScore" column="total_score"/>
        <result property="fullScore" column="full_score"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="selectTheoryTestResultByStudentIdAndTestInfo" resultMap="TheoryTestResultMap" parameterType="map">
        SELECT 
            ttr.id,
            ttr.test_time,
            ttr.test_name,
            ttr.attributes,
            ttr.total_score,
            ttr.full_score,
            ttr.created_at,
            ttr.updated_at
        FROM theory_test_result ttr
        INNER JOIN theory_test_map tt ON ttr.id = tt.theory_test_id
        WHERE tt.student_id = #{studentId}
          AND ttr.test_name = #{testName}
          AND ttr.test_time = #{testTime}
    </select>

    <select id="selectTheoryScoresByStudentIdAndSubjectId" resultType="map" parameterType="map">
        select ttr.total_score, ttr.full_score from theory_test_result ttr
        left JOIN 
        theory_test_map ttm on ttm.theory_test_id = ttr.id
        where
        ttm.student_id = #{studentId} and ttm.subject_id = #{subjectId}
    </select>

</mapper>