<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.simpleDemo.mapper.ClassesMapper">
    <resultMap id="ClassesResultMap" type="com.example.simpleDemo.entity.Classes">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="studentNum" column="student_num"/>
        <result property="subjectName" column="subject_name"/>
        <result property="subjectId" column="subject_id"/>
        <result property="classDescribe" column="class_describe"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    
    <select id="findAllClasses" resultMap="ClassesResultMap">
        SELECT id, name, teacher_id, teacher_name, student_num, subject_name, subject_id, class_describe, create_time, update_time 
        FROM classes
    </select>
    
    <select id="findClasses" parameterType="map" resultMap="ClassesResultMap">
        SELECT id, name, teacher_id, teacher_name, student_num, subject_name, subject_id, class_describe, create_time, update_time
        FROM classes
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="teacherName != null and teacherName != ''">
                AND teacher_name LIKE CONCAT('%', #{teacherName}, '%')
            </if>
            <if test="subjectName != null and subjectName != ''">
                AND subject_name LIKE CONCAT('%', #{subjectName}, '%')
            </if>
            <if test="teacherId != null">
                AND teacher_id = #{teacherId}
            </if>
        </where>
        ORDER BY id
    </select>
    
    <insert id="insertClass" parameterType="com.example.simpleDemo.entity.Classes" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO classes (name, teacher_id, teacher_name, student_num, subject_name, subject_id, class_describe)
        VALUES (#{name}, #{teacherId}, #{teacherName}, #{studentNum}, #{subjectName}, #{subjectId}, #{classDescribe})
    </insert>
    
    <update id="updateClass" parameterType="com.example.simpleDemo.entity.Classes">
        UPDATE classes
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="teacherName != null and teacherName != ''">teacher_name = #{teacherName},</if>
            <if test="studentNum != null">student_num = #{studentNum},</if>
            <if test="subjectName != null and subjectName != ''">subject_name = #{subjectName},</if>
            <if test="subjectId != null">subject_id = #{subjectId},</if>
            <if test="classDescribe != null and classDescribe != ''">class_describe = #{classDescribe},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>
    
    <select id="findClassById" parameterType="long" resultMap="ClassesResultMap">
        SELECT id, name, teacher_id, teacher_name, student_num, subject_name, subject_id, class_describe, create_time, update_time
        FROM classes
        WHERE id = #{id}
    </select>
    
    <!-- 根据教师ID查询科目ID -->
    <select id="findSubjectIdsByTeacherId" parameterType="java.lang.Long" resultType="long">
        SELECT DISTINCT subject_id
        FROM classes
        <where>
            <if test="teacherId != null">
                teacher_id = #{teacherId}
            </if>
        </where>
    </select>
    
    
    <!-- 根据教师ID查询班级ID -->
    <select id="findClassIdsByTeacherId" parameterType="long" resultType="long">
        SELECT id
        FROM classes
        <where>
            <if test="teacherId != null">
                teacher_id = #{teacherId}
            </if>
        </where>
    </select>
    
    <!-- 根据教师ID查询班级列表 -->
    <select id="findClassesByTeacherId" parameterType="long" resultMap="ClassesResultMap">
        SELECT id, name, teacher_id, teacher_name, student_num, subject_name, subject_id, class_describe, create_time, update_time
        FROM classes
        <where>
            <if test="teacherId != null">
                teacher_id = #{teacherId}
            </if>
        </where>
    </select>
    
    <delete id="deleteClassById" parameterType="long">
        DELETE FROM classes WHERE id = #{id}
    </delete>
</mapper>