<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.simpleDemo.mapper.KnowledgeTreeMapper">
    
    <resultMap id="KnowledgeTreeResultMap" type="com.example.simpleDemo.entity.KnowledgeTree">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="parentId" column="parent_id"/>
        <result property="masteryLevel" column="mastery_level"/>
        <result property="knowledgeDescribe" column="knowledge_describe"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isLeaf" column="is_leaf"/>
    </resultMap>
    
    <select id="findRootNodesByIds" resultMap="KnowledgeTreeResultMap">
        SELECT id, name, parent_id, mastery_level, knowledge_describe, created_at, updated_at, is_leaf, level
        FROM knowledges_tree
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 查询所有知识点 -->
    <select id="findAll" resultMap="KnowledgeTreeResultMap">
        SELECT id, name, knowledge_describe, parent_id, mastery_level, created_at, updated_at, level, is_leaf
        FROM knowledges_tree
    </select>
    
    <!-- 根据ID查询知识点 -->
    <select id="findById" parameterType="long" resultMap="KnowledgeTreeResultMap">
        SELECT id, name, knowledge_describe, parent_id, mastery_level, created_at, updated_at, level, is_leaf
        FROM knowledges_tree
        WHERE id = #{id}
    </select>
    
    <!-- 插入新的知识点 -->
    <insert id="insert" parameterType="com.example.simpleDemo.entity.KnowledgeTree" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO knowledges_tree (name, knowledge_describe, parent_id, mastery_level, created_at, updated_at, level, is_leaf)
        VALUES (#{name}, #{knowledgeDescribe}, #{parentId}, #{masteryLevel}, #{createdAt}, #{updatedAt}, #{level}, #{isLeaf})
    </insert>

    
    <!-- 更新知识点 -->
    <update id="update" parameterType="com.example.simpleDemo.entity.KnowledgeTree">
        UPDATE knowledges_tree
        SET name = #{name},
            knowledge_describe = #{knowledgeDescribe},
            parent_id = #{parentId},
            mastery_level = #{masteryLevel},
            updated_at = #{updatedAt},
            level = #{level},
            is_leaf = #{isLeaf}
        WHERE id = #{id}
    </update>
    
    <!-- 添加查询根节点的方法（parentId为null的节点） -->
    <select id="findRootNodes" resultMap="KnowledgeTreeResultMap">
        SELECT id, name, knowledge_describe, parent_id, mastery_level, created_at, updated_at, level, is_leaf
        FROM knowledges_tree
        WHERE parent_id IS NULL
    </select>
    
    <!-- 添加按父ID查询子节点的方法 -->
    <select id="findByParentId" parameterType="long" resultMap="KnowledgeTreeResultMap">
        SELECT id, name, knowledge_describe, parent_id, mastery_level, created_at, updated_at, level, is_leaf
        FROM knowledges_tree
        WHERE parent_id = #{parentId}
    </select>
    
</mapper>